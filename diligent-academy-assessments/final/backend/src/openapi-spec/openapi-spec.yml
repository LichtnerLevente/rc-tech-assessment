# To generate types from this file, run:
# npx openapi-typescript src/openapi-spec/openapi-spec.yml --output src/openapi-spec/types.ts

openapi: 3.0.0
info:
  title: Drillo
  version: 1.0.0
paths:
  /boards:
    get:
      summary: Get all boards
      operationId: getBoards
      responses:
        "200":
          description: A list of boards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Board"
        "500":
          description: Internal server error
    post:
      summary: Create a new board
      operationId: createBoard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BoardInput"
      responses:
        "201":
          description: The created board
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Board"
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /boards/{id}:
    get:
      summary: Get a board by ID
      operationId: getBoardById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: The requested board
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Board"
        "400":
          description: Bad request
        "404":
          description: Board not found
        "500":
          description: Internal server error
    patch:
      summary: Update a board by ID
      operationId: updateBoard
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BoardInput"
      responses:
        "200":
          description: The updated board
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Board"
        "400":
          description: Bad request
        "404":
          description: Board not found
        "500":
          description: Internal server error
  /boards/{id}/delete:
    delete:
      summary: Soft delete a board by ID
      operationId: deleteBoard
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Board soft deleted
        "400":
          description: Bad request
        "404":
          description: Board not found
        "500":
          description: Internal server error
  /boards/{id}/statuses:
    get:
      summary: Get statuses for a single board
      operationId: getStatusesByBoardId
      responses:
        "200":
          description: A list of statuses for the board
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Status"
        "500":
          description: Internal server error
  /boards/{board_id}/statuses/positions:
    patch:
      summary: Update positions for statuses under a board
      operationId: updateStatusPositionsByBoardId
      parameters:
        - in: path
          name: board_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/StatusPosition"
      responses:
        "200":
          description: The updated positions
          content:
           application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StatusPosition"
        "400":
          description: Bad request
        "404":
          description: Board not found
        "500":
          description: Internal server error
  /boards/{board_id}/tickets:
    get:
      summary: Get all tickets for a board
      operationId: getTicketsByBoardId
      parameters:
        - in: path
          name: board_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of tickets for a board
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ticket"
        "404":
          description: Board not found
        "500":
          description: Internal server error

  /statuses:
    get:
      summary: Get all statuses
      operationId: getStatuses
      responses:
        "200":
          description: A list of statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Status"
        "500":
          description: Internal server error
    post:
      summary: Create a new status
      operationId: createStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatusInput"
      responses:
        "201":
          description: The created status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /statuses/{id}:
    get:
      summary: Get a status by ID
      operationId: getStatusById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: The requested status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "400":
          description: Bad request
        "404":
          description: Status not found
        "500":
          description: Internal server error
    patch:
      summary: Update a status by ID
      operationId: updateStatus
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatusInput"
      responses:
        "200":
          description: The updated status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "400":
          description: Bad request
        "404":
          description: Status not found
        "500":
          description: Internal server error
  /statuses/{id}/delete:
    delete:
      summary: Soft delete a status by ID
      operationId: deleteStatus
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Status soft deleted
        "400":
          description: Bad request
        "404":
          description: Status not found
        "500":
          description: Internal server error
  /statuses/{status_id}/tickets:
    get:
      summary: Get all tickets for a status
      operationId: getTicketsByStatusId
      parameters:
        - in: path
          name: status_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of tickets for a status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ticket"
        "404":
          description: Board not found
        "500":
          description: Internal server error
  /tickets:
    get:
      summary: Get all tickets
      operationId: getTickets
      responses:
        "200":
          description: A list of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ticket"
        "500":
          description: Internal server error
    post:
      summary: Create a new tickets
      operationId: createTicket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TicketInput"
      responses:
        "201":
          description: The created ticket
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticket"
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /tickets/{id}:
    get:
      summary: Get a ticket by ID
      operationId: getTicketById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: The requested ticket
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticket"
        "400":
          description: Bad request
        "404":
          description: Ticket not found
        "500":
          description: Internal server error
    patch:
      summary: Update ticket by ID
      operationId: updateTicket
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TicketInput"
      responses:
        "200":
          description: The updated ticket
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticket"
        "400":
          description: Bad request
        "404":
          description: Ticket not found
        "500":
          description: Internal server error
  /tickets/{id}/delete:
    delete:
      summary: Soft delete a ticket by ID
      operationId: deleteTicket
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Ticket soft deleted
        "400":
          description: Bad request
        "404":
          description: Ticket not found
        "500":
          description: Internal server error
components:
  schemas:
    Board:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    BoardInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
    Status:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        board_id:
          type: integer
        position:
          type: integer
    StatusInput:
      type: object
      properties:
        name:
          type: string
        board_id:
          type: integer
      required:
        - name
    StatusPosition:
      type: object
      properties:
        id: 
          type: integer
        position: 
          type: integer
      required:
        - id
        - position
    Ticket:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        board_id:
          type: number
        status_id:
          type: number
    TicketInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        board_id:
          type: number
        status_id:
          type: number
      required:
        - name
        - board_id